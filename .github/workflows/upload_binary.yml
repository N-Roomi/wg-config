name: Publish executables

on:
  release:
    types: [published]

permissions:
  contents: read # actions/upload-release-asset needs this.actions:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-latest]
        include:
          - os: windows-2019
            pathsep: ";"
            asset_name: wg-config_windows.exe
            executable_mime: "application/vnd.microsoft.portable-executable"
          - os: ubuntu-20.04
            pathsep: ":"
            asset_name: wg-config_linux
            executable_mime: "application/x-executable"
          - os: macos-latest
            pathsep: ":"
            asset_name: wg-config_macos
            executable_mime: "application/x-mach-binary"
    steps:
      - uses: actions/checkout@v4
      - name: Set up latest Python
        uses: actions/setup-python@v5
        with:
          python-version: "*"
      - name: Install Black and PyInstaller
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install pyinstaller
      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Build wheel and source distributions
        run: poetry build
      - name: Build executable with PyInstaller
        run: |
          source "$(poetry env info --path)/bin/activate"
          python -m PyInstaller -F --name ${{ matrix.asset_name }} wg_config/__main__.py
      - name: Quickly test executable
        run: |
          ./dist/${{ matrix.asset_name }} --help
      - name: Upload binary as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: ${{ matrix.executable_mime }}
